@import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@400;500;600;700&display=swap");

*,
*::before,
*::after {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Space Grotesk", sans-serif;
  height: 100vh;
  background-color: #0a050b;
  color: #fff;
  overflow: hidden;
}

a {
  text-decoration: none;
  color: inherit;
}

#menu {
  height: 100vh;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

.menu-list {
  list-style: none;
  text-align: center;
  display: flex;
  flex-direction: column;
  gap: 1.5rem;
  position: relative;
}

.menu-list li a {
  font-size: 3rem;
  font-weight: 600;
  transition: 250ms;
  z-index: 2;
  /* 다른 요소 위에 표시 */
}

.menu-list:hover li a:not(:hover) {
  opacity: 0.3;
}
/* .menu-list 요소가 호버될때, 호저되지 않은 li a 요소의 투명도를 0.3으로 설정합니다.
  이는 마우스 오버된 항목을 강조하기 위함입니다. */

.menu-list li a::before {
  content: attr(data-text); /* data-text 속성의 값을 콘텐츠로 설정 */
  /* ::before 가상요소의 'content' 속성을 attr(data-text) 설정하여 */
  /* data-text 속성의 값을 콘텐츠로 사용합니다. */
  /*  맨하단에서 자세히 설명 */

  position: absolute;
  top: 50%;   /* 부모 요소 높이의 50% */
  left: 50%;  /* 부모 요소 너비 50% */
  transform: translate(-50%, -50%); 
  /* ### 중요 transform은 요소를 기준으로 변형 ### */
  /* 요소 자체의 크기 만큼 이동하여 , 결과적으로 요소의 중심이 부모의 요소의 중심과 일치 */

  font-size: clamp(4.6875rem, 1.9737rem + 10.8553vw, 15rem);
  /*
  clamp() 함수 는 폰트 크기 또는 다른 길이 값을 반응형으로 설정할 때 유용
  clamp() 함수는 최소값, 선호값, 최대값을 지정하여 , 해당 값이 최소값과 최대값 사이에서
  변하도록 합니다. 

  clamp(최소값, 선호값, 최대값)
  뷰포트 너비가 작을때 최소값
             중간 선호값
              클때 최대값

  */
  font-weight: 700;
  text-transform: uppercase; /*  텍스트를 대문자로 변환합니다. */
  letter-spacing: 500px; /*#########################################*/
  z-index: -1;  /* 다른요소 뒤에 위치 */
  color: hsl(0 0% 100% / 0.1);
  opacity: 0;
  transition: 0.5s ease;
  pointer-events: none;  /* 가상 요소가 마우스 이벤트에 반응하지 않도록 합니다. */
}

.menu-list li a:hover::before {
  opacity: 1;
  letter-spacing: 10px;
}

.menu-list li:nth-child(1) a::before {
  color: hsl(267 60% 76% / 0.4);
}

.menu-list li:nth-child(2) a::before {
  color: hsl(174 60% 43% / 0.4);
}

.menu-list li:nth-child(3) a::before {
  color: hsl(258 60% 35% / 0.4);
}

.menu-list li:nth-child(4) a::before {
  color: hsl(349 52% 61% / 0.4);
}

.menu-list li:nth-child(5) a::before {
  color: hsl(29 60% 70% / 0.5);
}


/*
hsl() 함수는 색상(Hue), 채도(Saturation), 밝기(Lightness)를 사용합니다. 
hsl() 함수에 추가된 / 뒤의 값은 알파(Alpha) 값을 나타내며, 이는 색상의 투명도를 지정합니다. 
이를 hsla() 함수로도 나타낼 수 있습니다.

hsl() 함수와 알파 값
hsl(h, s%, l%): 색상(Hue), 채도(Saturation), 밝기(Lightness)을 지정합니다.

h: 색상은 0도에서 360도까지의 값을 가집니다.
s%: 채도는 백분율로 나타내며, 0%는 회색, 100%는 가장 선명한 색을 의미합니다.
l%: 밝기도 백분율로 나타내며, 0%는 검정, 100%는 흰색을 의미합니다.

hsla(h, s%, l%, a): 색상(Hue), 채도(Saturation), 밝기(Lightness)에 투명도(Alpha)를 추가로 지정합니다.

a: 알파 값은 0에서 1까지의 값을 가지며,
   0은 완전히 투명하고 1은 불투명합니다.
   / 뒤의 값 (/ 0.4)
  위의 코드에서 / 0.4는 투명도를 나타냅니다. 이 값은 알파(Alpha) 값으로, 색상의 불투명도를 설정합니다.

/ 0.4: 40% 불투명, 즉 60% 투명입니다.
이를 hsla() 함수로 변환하면 다음과 같습니다:

hsl(267, 60%, 76% / 0.4) 는 hsla(267, 60%, 76%, 0.4)와 같습니다.
*/

/* 
CSS에서 content 속성은 주로 ::before ::after 가상 요소에 사용되며,
요소의 콘텐츠를 생성하는데 사용 됩니다.
이 속성은 HTML에 직접 포함되지 않는 콘텐츠를 추가 할때 유용합니다.
HTML 구조를 변경하지 않고도 다양한 콘텐츠를 추가 하고 스타일링할 수 있습니다.

1. 텍스트 콘텐츠 추가
P::before {
  content: "hello, ";
}
2. 이미지 추가
p::before {
  content: url('imge.png');
}
3. 특수문자 추가
p::before {
  content: "\2605";  유니코드 별 문자 
}
4. 속성값 추가
a::before {
  content:attr(data-text);
}
5. 카운터값 
element::before {
  content: counter(item);
}

### content 속성 자세한 설명
기본값 : 'none'
적용대상 : ::before  , :: after 
상속 : 아니요
애니메이션 가능 : 예


attr( ) 속성함수
attr( ) 함수는 HTML 요소의 속성 값을 가져오는데 사용됩니다.
예를 들어 'data-text'라는 사용자 정의 속성을 가진 HTML 요소가 있다고 가정할 때
attr(data-text)를 사용하여 해당 속성의 값을 가져올 수 있습니다.



data-text는 HTML 표준 속성이 아닙니다.
대신 HTML5 에서 도입된 data-* 속성의 일부분 입니다.

data-* 속성은 사용자 정의 데이터를 HTML 요소에 저장할 수 있게 해줍니다.

data-* 속성
정의 data-* 속성은 HTML 요소에 사용자 정의 데이터를 저장할 때 사용됩니다.
형식 속성 이름은 'data-'로 시작하고 그 귀에 임의의 이름이 올 수 있습니다.
예를 들어 data-text , data-id , data-info 등등

*/

