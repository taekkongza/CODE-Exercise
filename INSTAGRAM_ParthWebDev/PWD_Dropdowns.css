@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap");
/*  구글 폰트 로드 */

*,
*::before,
*::after {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}
/* 모든 요소, 가상 요소에 패딩, 마진 0, 박스모델 설정 */

body {
  font-family: "Roboto", sans-serif;
  height: 100vh;
  background-color: #fcfcf7;
  color: #1f1f09;
  display: flex;
  justify-content: center;
  align-items: center;
}

button,
li,
a {
  all: unset;   /* 스타일 초기화 */
  box-sizing: border-box;
}

/* 드롭다운 스타일 설정, 최대너비, 배경색, 테두리반경, 그림자 설정 */
#dropdown {
  --border-radius: 6px;
  --shadow-color: 60deg 13% 61%;
  /* 
  --shadow-color : 60deg 13% 61%;
  HSL 색상 모델로 지정하는 CSS 변수이다.

  Hue(색상) Saturation(채도) Lightness(명도)
  Hue 색상환 0도 ~ 360도, 0도 빨강, 60도 노란색, 120도 초록  240 파란색
  Saturation 0% 회색 100% 가장 선명한색
  Lightness 색상의 밝기 0% 검정 100% 흰색  
  */

  max-width: 220px;
  width: 100%;
  background-color: #fff;
  border-radius: var(--border-radius);
  position: relative;
  box-shadow: 0.8px 1.6px 2px -0.8px hsl(var(--shadow-color) / 0.3),
    2.1px 4.1px 5.2px -1.7px hsl(var(--shadow-color) / 0.3),
    5px 10px 12.6px -2.5px hsl(var(--shadow-color) / 0.3);
    /*
    x-offset 양수 오른쪽
    y-offset 양수 아래
    blur-radius 클수록 그림자가 더 흐려짐
    spread-radius 양수 그림자 확장
    색상 hsl(.../0.3) 투명도 30%
    */

}


/* DROPDOWN / submenu items and toggles */
.dropdown-toggle,
.menu-item,
.submenu-item {
  width: 100%;
  padding: 12px 20px;
  cursor: pointer;
}
/* 드롭다운 아이템 스타일설정 패딩, 커서, 포인터 설정 */


:is(.menu-item, .submenu-item):first-child {
  border-top-right-radius: inherit;
  border-top-left-radius: inherit;
}
/*
':is' 
pseudoclass 는 여러개의 선택자를 그룹화 하여 
하나 이상의 선택자와 일치하는 요소에 스타일을 
적용할 수 있게 합니다. 
':is' 를 사용하면 중복된 스타일 규칙을 줄일 수 있고,
코드의 가독성을 높일 수 있습니다.

:is(   )
괄호 안에 있는 선택자 중 하나라도 일치하는 요소를 선택
괄호안의 클래스가 있는 요소 중에서 부모의 첫번째 자신인
요소에 스타일을 적용합니다.
*/

:is(.menu-item, .submenu-item):last-child {
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}

:is(.menu-item, .submenu-item):hover {
  background-color: #faf6ea;
}

.dropdown-toggle,
.submenu-toggle {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.dropdown-toggle > span {
  color: #7b7b6e;
}

i {
  color: #db8400;
  transition: 0.25s ease;
}

.dropdown-toggle.open > i {
  rotate: 180deg;
}
/* 
dropdown-toggle 클래스가 open 클래스를 가지고 있을때 
*/

/* Menu and Submenu */
.dropdown {
  position: relative;
}

.menu,
.submenu {
  display: flex;
  flex-direction: column;
  background-color: #fff;
  border-radius: var(--border-radius);
  position: absolute;
  left: 0;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s ease;
}

/*
opacity 와 visibility 는 모두 시각적 표현을 제어하지만
그 방식과 결과는 다릅니다.

opacity
기능: 요소의 투명도를 설정
값: 0 (완전히 투명) ~ 1 (완전히 불투명) 
영향: 요소는 여전히 레이아웃에서 공간을 차지하지만, 눈에 보이지 않을 수 있습니다.
이벤트: opacity가 0 인 경우에도 요소는 여전히 이벤트(예: 클릭)를 받습니다.
애니메이션: 투명도 변화를 부드럽게 전환

visibility
기능: 요소의 가시성을 설정합니다.
값: visible hidden
영향: hidden 인 경우 공간을 차지하지만 눈에 보이지 않습니다.
이벤트: hidden 인 경우 이벤틀를 받지 않습니다.
애니메니션: 가시성 변화를 부드럽게 전환하기는 어렵습니다.

display
기능: 요소의 표시 여부를 설정
값: none(표시 안함) block inline flex등
영향: display: none; 인 경우 공간을 차지하지 않으며, 눈에 보이지 않습니다.
이벤트: display: none; 인 경우 요소는 이벤틀ㄹ 받지 않습니다.
애니메이션: display 속성은 애니메이션 하기 어렵습니다. 

사용목적: 
opacity: 0; 주로 요소의 가시성을 부드럽게 전환할때 사용하며,
visibility: hidden;은 요소를 보이지 않게 하면서 이벤트를 비활성화 할때 사용


opacity: 0;
visibility: hidden;
요소는 완전히 투명, 이벤트도 받지 않으며, 애니메이션 효과도 줄수 있습니다.






*/





.menu {
  width: 100%;
  translate: 0 -12px;
}

.menu.open {
  visibility: visible;
  opacity: 1;
  translate: 0 12px;
}

.submenu {
  width: max-content;
  visibility: hidden;
  opacity: 0;
  position: absolute;
  top: 0;
  left: 100%;
  translate: -12px 0;
}

.menu-item:hover > .submenu-toggle + .submenu {
  visibility: visible;
  opacity: 1;
  translate: 8px 0;
}







