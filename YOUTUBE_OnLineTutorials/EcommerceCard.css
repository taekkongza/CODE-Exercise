@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');

*, *::before, *::after
{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}

body
{
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background: #131313;

}

.container
{
  position: relative;
}

.container .card
{
  position: relative;
  width: 320px;
  height: 450px;
  background: #232323;
  border-radius: 20px;
  overflow: hidden;

}

.container .card:before
{
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #9bdc28;
  clip-path: circle(150px at 80% 20%);
  transition: 0.5s ease-in-out; 
}
/* 
clip-path : CSS속성으로 요소읠 일부분을 특정한 모양으로 잘라내어 보여줄때 사용
요소의 일부를 숨기고 나머지 부분만 보여주는 역할

clip-path 주요 사용법
- circle( ) 원형
- ellipse( ) 타원형
- inset( ) 요소의 안쪽 경게로부터 사각형의 모서리 까지의 거리를 지정
- polygon( ) 다각형
- path( ) SVG경로 데이터를 사용하여 클리핑 결로를 정의

clip-path: path('M10 10 H 90 V 90 H 10 L 10 10');
M move to (10, 10) 시작점
H horizontal line to (90, 10) 
V Vertical line to (90, 90)
H 10 (10, 90)
L line to (10, 10) 선을 그리며 이동하여 경로를 마침

clip-path: circle(150px at 80% 20%)
원의 중심이 요소의 80% 가로위치와 20% 세로위치에 반지름이 150px 의 원을 정의

*/


.container .card:hover:before
{
  clip-path: circle(300px at 80% -20%);
  /* 원의 중심이 요소 가로 80% 세로 -20% 로 이동, 반지름이 300px로 확장*/

}

.container .card:after
{
  content: 'Nike';
  position: absolute;
  top: 30%;
  left: -20%;
  font-size: 12em;
  font-weight: 800;
  font-style: italic;
  color: rgba(255, 255, 255, 0.04);
}

.container .card .imgBx
{
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  z-index: 10000;
  width: 100%;
  height: 220px;
  transition: 0.5s;
}

.container .card:hover .imgBx
{
  top: 0%;
  transform: translateY(0%);  
}

.container .card .imgBx img
{
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-55%, -60%) rotate(-25deg) scaleX(-1);
  width: 270px;
}

.container .card .contentBx
{
  position: absolute;
  bottom: 0;
  width: 100%;
  height: 100px;
  text-align: center;
  transition: 1s;
  z-index: 10;
}

.container .card:hover .contentBx
{
  height: 210px;
}

.container .card .contentBx h2
{
  position: relative;
  font-weight: 600;
  letter-spacing: 1px;
  color: #fff;
}

.container .card .contentBx .size,
.container .card .contentBx .color
{
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 8px 20px;
  transition: 0.5s;
  opacity: 0;
  visibility: hidden;
}

.container .card:hover .contentBx .size
{
  opacity: 1;
  visibility: visible;
  transition-delay: 0.4s;
}
.container .card:hover .contentBx .color
{
  opacity: 1;
  visibility: visible;
  transition-delay: 0.57s;
}


.container .card .contentBx .size h3,
.container .card .contentBx .color h3
{
  color: #fff;
  font-weight: 300;
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 2px;
  margin-right: 10px;
}

.container .card .contentBx .size span
{
  width: 26px;
  height: 26px;
  text-align: center;
  line-height: 26px;
  font-size: 14px;
  display: inline-block;
  color: #111;
  background: #fff;
  margin: 0 5px;
  transition: 0.5s;
  color: #111;
  border-radius: 4px;
  cursor: pointer;
}

.container .card .contentBx .size span:hover
{
  background: #9bdc28;
}

.container .card .contentBx .color span
{
  width: 20px;
  height: 20px;
  background: #ff0;
  border-radius: 50%;
  margin: 0 5px;
  cursor: pointer;
}

.container .card .contentBx .color span:nth-child(2)
{
  background: #9bdc28;
}
.container .card .contentBx .color span:nth-child(3)
{
  background: #03a9f4;
}
.container .card .contentBx .color span:nth-child(4)
{
  background: #e91e63;
}

.container .card .contentBx a
{
  display: inline-flex;
  padding: 10px 20px;
  background: #fff;
  border-radius: 4px;
  margin-top: 10px;
  text-decoration: none;
  font-weight: 600;
  color: #111;
  opacity: 0;
  transform: translateY(50px);
  transition: 0.5s;
}

.container .card:hover .contentBx a
{
  opacity: 1;
  transform: translateY(0px);
  transition-delay: 0.75s;

}



